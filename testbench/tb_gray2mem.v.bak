module tb_memoryInterface;


reg clk, rst, gen_en;
wire [9:0] addr;
wire done;

reg lock;
reg [9:0] c_addr;

initial lock = 1'b0;
//initial addr = 10'b00000_00000;

addressGen uu1(clk, rst, gen_en, addr, done);

reg [9:0] addr_rd;
wire [11:0] mem;
wire [3:0] red;
wire [3:0] green;
wire [3:0] blue;


ROM uu2( addr_rd, red, green, blue, mem);


reg wr_en;
reg [9:0] wr_addr;
reg [11:0] wr_data;
reg [9:0] rd_addr;
wire [11:0] data_out;

memory UUT(clk, wr_en, wr_addr, wr_data, rd_addr, data_out);



reg [11:0] rgb_in;
wire [11:0] gray_out;


grayScale UUT(clk, rgb_in, gray_out);

initial begin
	rst = 1'b1;
	#300;
	rst =1'b0;
	gen_en = 1'b1;
	
	#2000;
	
	#2000;
	
	$stop;
end

always @(*) begin
	addr_rd = addr;
	wr_addr = addr;
	rgb_in = mem;
	wr_data = gray_out;
	wr_en = gen_en;
end


always begin
	if(rst == 1'b1) begin
		clk = 1'b0;
	#1;
	end
	else begin
	#100;
	clk = ~clk;
	end
end
endmodule
