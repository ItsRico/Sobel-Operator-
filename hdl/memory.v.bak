module memory( clk, wr_en, wr_addr, wr_data, rd_addr, data_out);

input clk,wr_en;

input sobel_en;
input [9:0] wr_addr; 
input [11:0] wr_data;
input [9:0] rd_addr;
output [11:0] data_out;
output reg [3:0] wr_gx;
output reg [3:0] wr_gy;
output reg sobel_done


reg [11:0] mem [0:1023] ;


always @(posedge clk) begin

	if( wr_en == 1'b1) begin
		mem[wr_addr] <= wr_data;  // wr_addr 0 - 3 
	end
end

assign data_out = mem[rd_addr];


endmodule
