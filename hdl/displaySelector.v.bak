module displaySelector(clk, rst, state,gen_addr, rVGA, data_out, bVGA, gVGA, done, gen_en, wr_en, gray_out, red, blue, green, wr_data)

input clk, rst;

input [5:0] state;
input [9:0] gen_addr;
input [11:0] data_out; //data stored in RAM
input done, gen_en, wr_en;
		//address gen and RAM write enable
input [3:0] gray_out, red, blue, green;
output [3:0] rVGA, gVGA, bVGA;
output [11:0] wr_data;
parameter  RESET = 6'b000000;
parameter RED  = 6'b000001;
parameter BLUE  = 6'b000010;
parameter GREEN  = 6'b001000;
parameter GRAY = 6'b010000;

always @(*) begin

	case(state) begin
	//displaying from ROM
		RESET: begin	//display all channels
			rVGA = red;
			bVGA = blue;
			gVGA = green;
		RED: begin
			rVGA = red; //only red
			bVGA = 4'b0000;
			gVGA = 4'b0000;
		end
		BLUE: begin
			rVGA = 4'b0000;
			bVGA = blue;
			gVGA = 4'b0000;
		end
		GREEN: begin
			rVGA = 4'b0000;
			bVGA = 4'b0000;
			gVGA = green;
		end
		//// Write, then display from RAM
		GRAY: begin
			if(gray_en == 1'b1) begin
				//write gray to mem
				gen_en = 1'b1;
				wr_en = 1'b1; //
				wr_data = {gray_out, gray_out, gray_out}; //write to memory the gray scale operation
				if( gen_addr == 10'b11111_11111 or done == 1'b1) begin
					wr_en = 1'b0; // stop writing to memory
					gen_en = 1'b0; // reset address generator
				end
			end
			else begin
					//this means that we have finished writing
				rVGA = data_out[0:3]; //all the same since gray filter was appllied to ROM contents
				bVGA = data_out[0:3];
				gVGA = data_out[0:3];
			end
		end
end